//! This module contains the Errors struct, which holds all the errors generated by parts of the
//! program, as well as the Error enum, which enumerates the possible errors.

enum Error {
    Lexer {
        message: String, // description of the error
        position: usize, // index into the source code
    },
    Parser {
        message: String, // description of the error
        position: usize, // index into the token stream
    },
}

pub struct Errors {
    errors: Vec<Error>,
}

impl Errors {
    pub fn new() -> Self {
        Errors {
            errors: vec![],
        }
    }

    pub fn lexer(&mut self, message: String, position: usize) {
        self.errors.push(
            Error::Lexer { message, position }
        );
    }

    pub fn parser(&mut self, message: String, position: usize) {
        self.errors.push(
            Error::Parser { message, position }
        );
    }
}
